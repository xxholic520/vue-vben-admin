import { BasicColumn, FormSchema } from '@/components/Table';
#foreach($column in $columns)
  #if($column.query)
  #end
  #if($column.list)
    #if($column.htmlType == "imageUpload" || $column.htmlType == "datetime" || $column.dictType)
      #set($importUseRender=true)
    #end
  #end
  #if($column.edit || $column.insert)
  #end
#end
#if($!importUseRender)
import { useRender } from '@/hooks/component/useRender';
#end
#if("" != $dicts)
import { useDict } from '@/utils/helper/dictHelper';
#end

#if("" != $dicts)
const dictState = useDict(${dicts})
#end

// 列表
export const columns: BasicColumn[] = [
  #foreach($column in $columns)
    #if($column.list)
      #set($javaField=$column.javaField)
      #set($parentheseIndex=$column.columnComment.indexOf("（"))
      #if($parentheseIndex != -1)
        #set($comment=$column.columnComment.substring(0, $parentheseIndex))
      #else
        #set($comment=$column.columnComment)
      #end
  {
    title: '${comment}',
    dataIndex: '${javaField}',
    #if($column.dictType && "" != $column.dictType)
    customRender: ({ record }) => {
      #if($column.htmlType == "checkbox")
      return useRender().renderDictTag(record.${javaField} ? record.${javaField}.split(',') : [], dictState.value.${column.dictType});
      #else
      return useRender().renderDictTag(record.${javaField}, dictState.value.${column.dictType});
      #end
    },
    #elseif($column.htmlType == "imageUpload")
    customRender: ({ record }) => {
      return useRender().renderImage({ src: record.${javaField}, width: 50, height: 50, placeholder: true });
    },
    #elseif($column.htmlType == "datetime")
    customRender: ({ record }) => {
      return useRender().renderDateTime(record.${javaField});
    }
    #end
  },
    #end
  #end
];

// 搜索
export const searchFormSchema: FormSchema[] = [
#foreach($column in $columns)
  #if($column.query)
    #set($dictType=$column.dictType)
    #set($parentheseIndex=$column.columnComment.indexOf("（"))
    #if($parentheseIndex != -1)
      #set($comment=$column.columnComment.substring(0, $parentheseIndex))
    #else
      #set($comment=$column.columnComment)
    #end
    #if($column.htmlType == "input")
      #set($component="Input")
    #elseif($column.htmlType == "textarea")
      #set($component="InputTextArea")
    #elseif($column.htmlType == "select" || $column.htmlType == "radio" || $column.htmlType == "checkbox")
      #set($component="Select")
    #elseif($column.htmlType == "datetime" && $column.queryType != "BETWEEN")
      #set($component="DatePicker")
    #elseif($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
      #set($component="RangePicker")
    #else
      #set($component="Input")
    #end
  {
    label: '${comment}',
    field: '${column.javaField}',
    component: '${component}',
    #if($component=="Input")
    componentProps: {
      placeholder: '请输入${comment}',
    },
    #elseif($component=="InputTextArea")
    componentProps: {
      placeholder: '请输入内容',
    },
    #elseif($component=="Select")
    componentProps: () => ({
      placeholder: '请选择${comment}',
      #if("" != $dictType)
      options: dictState.value.${dictType},
      #else
      options: [],
      #end
    }),
    #elseif($component=="DatePicker"||$component=="RangePicker")
    componentProps: {
      showTime: true,
      format: 'YYYY-MM-DD HH:mm:ss',
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
    },
    #end
  },
  #end
#end
];

// 表单
export const formSchema: FormSchema[] = [
#foreach($column in $columns)
#if($column.insert||$column.edit)
  #set($dictType=$column.dictType)
  #set($parentheseIndex=$column.columnComment.indexOf("（"))
  #if($parentheseIndex != -1)
    #set($comment=$column.columnComment.substring(0, $parentheseIndex))
  #else
    #set($comment=$column.columnComment)
  #end
  #if($column.htmlType == "input")
    #set($component="Input")
  #elseif($column.htmlType == "textarea")
    #set($component="InputTextArea")
  #elseif($column.htmlType == "select")
    #set($component="Select")
  #elseif($column.htmlType == "radio")
    #set($component="RadioGroup")
  #elseif($column.htmlType == "datetime" && $column.queryType != "BETWEEN")
    #set($component="DatePicker")
  #elseif($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
    #set($component="RangePicker")
  #else
    #set($component="Input")
  #end
  #if($column.required)
    #set($required='true')
  #else
    #set($required='false')
  #end
  {
    label: '${comment}',
    field: '${column.javaField}',
    required: ${required},
    component: '${component}',
    #if($column.pk)
    ifShow: false,
    #else
    #if($component=="Input")
    componentProps: {
      placeholder: '请输入${comment}',
    },
    #elseif($component=="InputTextArea")
    componentProps: {
      placeholder: '请输入内容',
    },
    #elseif($component=="Select"||$component=="RadioGroup")
    componentProps: () => ({
      #if($component=="Select")
      placeholder: '请选择${comment}',
      #end
      #if("" != $dictType)
      options: dictState.value.${dictType},
      #else
      options: [],
      #end
    }),
    #elseif($component=="DatePicker"||$component=="RangePicker")
    componentProps: {
      showTime: true,
      format: 'YYYY-MM-DD HH:mm:ss',
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
    },
    #end
    #end
  },
#end
#end
]
